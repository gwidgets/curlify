[
    {
        "longFormOption": "--abstract-unix-socket",
        "argument": "path",
        "description": "Connect via abstract Unix domain socket"
    },
    {
        "longFormOption": "--anyauth",
        "description": "Pick any authentication method"
    },
    {
        "shortFormOption": "-a",
        "longFormOption": "--append",
        "description": "Append to target file when uploading"
    },
    {
        "longFormOption": "--basic",
        "description": "Use HTTP Basic Authentication"
    },
    {
        "longFormOption": "--cacert",
        "argument": "file",
        "description": "CA certificate to verify peer against"
    },
    {
        "longFormOption": "--capath",
        "argument": "dir",
        "description": "CA directory to verify peer against"
    },
    {
        "shortFormOption": "-E",
        "longFormOption": "--cert",
        "argument": "certificate[:password]",
        "description": "Client certificate file and password"
    },
    {
        "longFormOption": "--cert-status",
        "description": "Verify the status of the server certificate"
    },
    {
        "longFormOption": "--cert-type",
        "argument": "type",
        "description": "Certificate file type (DER/PEM/ENG)"
    },
    {
        "longFormOption": "--ciphers",
        "argument": "list of ciphers",
        "description": "of ciphers> SSL ciphers to use"
    },
    {
        "longFormOption": "--compressed",
        "description": "Request compressed response"
    },
    {
        "longFormOption": "--compressed-ssh",
        "description": "SSH compression"
    },
    {
        "shortFormOption": "-K",
        "longFormOption": "--config",
        "argument": "file",
        "description": "Read config from a file"
    },
    {
        "longFormOption": "--connect-timeout",
        "argument": "seconds",
        "description": "Maximum time allowed for connection"
    },
    {
        "longFormOption": "--connect-to",
        "argument": "HOST1:PORT1:HOST2:PORT2",
        "description": "Connect to host"
    },
    {
        "shortFormOption": "-C",
        "longFormOption": "--continue-at",
        "argument": "offset",
        "description": "Resumed transfer offset"
    },
    {
        "shortFormOption": "-b",
        "longFormOption": "--cookie",
        "argument": "data",
        "description": "Send cookies from string/file"
    },
    {
        "shortFormOption": "-c",
        "longFormOption": "--cookie-jar",
        "argument": "filename",
        "description": "Write cookies to <filename> after operation"
    },
    {
        "longFormOption": "--create-dirs",
        "description": "Create necessary local directory hierarchy"
    },
    {
        "longFormOption": "--crlf",
        "description": "Convert LF to CRLF in upload"
    },
    {
        "longFormOption": "--crlfile",
        "argument": "file",
        "description": "Get a CRL list in PEM format from the given file"
    },
    {
        "longFormOption": "--delegation",
        "argument": "LEVEL",
        "description": "GSS-API delegation permission"
    },
    {
        "longFormOption": "--digest",
        "description": "Use HTTP Digest Authentication"
    },
    {
        "shortFormOption": "-q",
        "longFormOption": "--disable",
        "description": "Disable .curlrc"
    },
    {
        "longFormOption": "--disable-eprt",
        "description": "Inhibit using EPRT or LPRT"
    },
    {
        "longFormOption": "--disable-epsv",
        "description": "Inhibit using EPSV"
    },
    {
        "longFormOption": "--dns-interface",
        "argument": "interface",
        "description": "Interface to use for DNS requests"
    },
    {
        "longFormOption": "--dns-ipv4-addr",
        "argument": "address",
        "description": "IPv4 address to use for DNS requests"
    },
    {
        "longFormOption": "--dns-ipv6-addr",
        "argument": "address",
        "description": "IPv6 address to use for DNS requests"
    },
    {
        "longFormOption": "--dns-servers",
        "argument": "addresses",
        "description": "DNS server addrs to use"
    },
    {
        "shortFormOption": "-D",
        "longFormOption": "--dump-header",
        "argument": "filename",
        "description": "Write the received headers to <filename>"
    },
    {
        "longFormOption": "--egd-file",
        "argument": "file",
        "description": "EGD socket path for random data"
    },
    {
        "longFormOption": "--engine",
        "argument": "name",
        "description": "Crypto engine to use"
    },
    {
        "longFormOption": "--expect100-timeout",
        "argument": "seconds",
        "description": "How long to wait for 100-continue"
    },
    {
        "shortFormOption": "-f",
        "longFormOption": "--fail",
        "description": "Fail silently (no output at all) on HTTP errors"
    },
    {
        "longFormOption": "--fail-early",
        "description": "Fail on first transfer error, do not continue"
    },
    {
        "longFormOption": "--false-start",
        "description": "Enable TLS False Start"
    },
    {
        "shortFormOption": "-F",
        "longFormOption": "--form",
        "argument": "name=content",
        "description": "Specify multipart MIME data"
    },
    {
        "longFormOption": "--form-string",
        "argument": "name=string",
        "description": "Specify multipart MIME data"
    },
    {
        "longFormOption": "--ftp-account",
        "argument": "data",
        "description": "Account data string"
    },
    {
        "longFormOption": "--ftp-alternative-to-user",
        "argument": "command",
        "description": "String to replace USER [name]"
    },
    {
        "longFormOption": "--ftp-create-dirs",
        "description": "the remote dirs if not present"
    },
    {
        "longFormOption": "--ftp-method",
        "argument": "method",
        "description": "Control CWD usage"
    },
    {
        "longFormOption": "--ftp-pasv",
        "description": "Use PASV/EPSV instead of PORT"
    },
    {
        "shortFormOption": "-P",
        "longFormOption": "--ftp-port",
        "argument": "address",
        "description": "Use PORT instead of PASV"
    },
    {
        "longFormOption": "--ftp-pret",
        "description": "Send PRET before PASV"
    },
    {
        "longFormOption": "--ftp-skip-pasv-ip",
        "description": "the IP address for PASV"
    },
    {
        "longFormOption": "--ftp-ssl-ccc",
        "description": "Send CCC after authenticating"
    },
    {
        "longFormOption": "--ftp-ssl-ccc-mode",
        "argument": "active/passive",
        "description": "Set CCC mode"
    },
    {
        "longFormOption": "--ftp-ssl-control",
        "description": "SSL/TLS for FTP login, clear for transfer"
    },
    {
        "shortFormOption": "-G",
        "longFormOption": "--get",
        "description": "Put the post data in the URL and use GET"
    },
    {
        "shortFormOption": "-g",
        "longFormOption": "--globoff",
        "description": "Disable URL sequences and ranges using {} and []"
    },
    {
        "longFormOption": "--happy-eyeballs-timeout-ms",
        "description": "long to wait in milliseconds for IPv6 before trying IPv4"
    },
    {
        "shortFormOption": "-I",
        "longFormOption": "--head",
        "description": "Show document info only"
    },
    {
        "longFormOption": "--hostpubmd5",
        "argument": "md5",
        "description": "Acceptable MD5 hash of the host public key"
    },
    {
        "shortFormOption": "-0",
        "longFormOption": "--http1.0",
        "description": "Use HTTP 1.0"
    },
    {
        "longFormOption": "--http1.1",
        "description": "Use HTTP 1.1"
    },
    {
        "longFormOption": "--http2",
        "description": "Use HTTP 2"
    },
    {
        "longFormOption": "--http2-prior-knowledge",
        "description": "HTTP 2 without HTTP/1.1 Upgrade"
    },
    {
        "longFormOption": "--ignore-content-length",
        "description": "the size of the remote resource"
    },
    {
        "shortFormOption": "-i",
        "longFormOption": "--include",
        "description": "Include protocol response headers in the output"
    },
    {
        "shortFormOption": "-k",
        "longFormOption": "--insecure",
        "description": "Allow insecure server connections when using SSL"
    },
    {
        "longFormOption": "--interface",
        "argument": "name",
        "description": "Use network INTERFACE (or address)"
    },
    {
        "shortFormOption": "-4",
        "longFormOption": "--ipv4",
        "description": "Resolve names to IPv4 addresses"
    },
    {
        "shortFormOption": "-6",
        "longFormOption": "--ipv6",
        "description": "Resolve names to IPv6 addresses"
    },
    {
        "shortFormOption": "-j",
        "longFormOption": "--junk-session-cookies",
        "description": "session cookies read from file"
    },
    {
        "longFormOption": "--keepalive-time",
        "argument": "seconds",
        "description": "Interval time for keepalive probes"
    },
    {
        "longFormOption": "--key",
        "argument": "key",
        "description": "Private key file name"
    },
    {
        "longFormOption": "--key-type",
        "argument": "type",
        "description": "Private key file type (DER/PEM/ENG)"
    },
    {
        "longFormOption": "--krb",
        "argument": "level",
        "description": "Enable Kerberos with security <level>"
    },
    {
        "longFormOption": "--libcurl",
        "argument": "file",
        "description": "Dump libcurl equivalent code of this command line"
    },
    {
        "longFormOption": "--limit-rate",
        "argument": "speed",
        "description": "Limit transfer speed to RATE"
    },
    {
        "shortFormOption": "-l",
        "longFormOption": "--list-only",
        "description": "List only mode"
    },
    {
        "longFormOption": "--local-port",
        "argument": "num/range",
        "description": "Force use of RANGE for local port numbers"
    },
    {
        "shortFormOption": "-L",
        "longFormOption": "--location",
        "description": "Follow redirects"
    },
    {
        "longFormOption": "--location-trusted",
        "description": "--location, and send auth to other hosts"
    },
    {
        "longFormOption": "--login-options",
        "argument": "options",
        "description": "Server login options"
    },
    {
        "longFormOption": "--mail-auth",
        "argument": "address",
        "description": "Originator address of the original email"
    },
    {
        "longFormOption": "--mail-from",
        "argument": "address",
        "description": "Mail from this address"
    },
    {
        "longFormOption": "--mail-rcpt",
        "argument": "address",
        "description": "Mail to this address"
    },
    {
        "shortFormOption": "-M",
        "longFormOption": "--manual",
        "description": "Display the full manual"
    },
    {
        "longFormOption": "--max-filesize",
        "argument": "bytes",
        "description": "Maximum file size to download"
    },
    {
        "longFormOption": "--max-redirs",
        "argument": "num",
        "description": "Maximum number of redirects allowed"
    },
    {
        "shortFormOption": "-m",
        "longFormOption": "--max-time",
        "argument": "time",
        "description": "Maximum time allowed for the transfer"
    },
    {
        "longFormOption": "--metalink",
        "description": "Process given URLs as metalink XML file"
    },
    {
        "longFormOption": "--negotiate",
        "description": "Use HTTP Negotiate (SPNEGO) authentication"
    },
    {
        "shortFormOption": "-n",
        "longFormOption": "--netrc",
        "description": "Must read .netrc for user name and password"
    },
    {
        "longFormOption": "--netrc-file",
        "argument": "filename",
        "description": "Specify FILE for netrc"
    },
    {
        "longFormOption": "--netrc-optional",
        "description": "either .netrc or URL"
    },
    {
        "shortFormOption": "-:",
        "longFormOption": "--next",
        "description": "Make next URL use its separate set of options"
    },
    {
        "longFormOption": "--no-alpn",
        "description": "Disable the ALPN TLS extension"
    },
    {
        "shortFormOption": "-N",
        "longFormOption": "--no-buffer",
        "description": "Disable buffering of the output stream"
    },
    {
        "longFormOption": "--no-keepalive",
        "description": "Disable TCP keepalive on the connection"
    },
    {
        "longFormOption": "--no-npn",
        "description": "Disable the NPN TLS extension"
    },
    {
        "longFormOption": "--no-sessionid",
        "description": "Disable SSL session-ID reusing"
    },
    {
        "longFormOption": "--noproxy",
        "argument": "no-proxy-list",
        "description": "List of hosts which do not use proxy"
    },
    {
        "longFormOption": "--ntlm",
        "description": "Use HTTP NTLM authentication"
    },
    {
        "longFormOption": "--ntlm-wb",
        "description": "Use HTTP NTLM authentication with winbind"
    },
    {
        "longFormOption": "--oauth2-bearer",
        "argument": "token",
        "description": "OAuth 2 Bearer Token"
    },
    {
        "shortFormOption": "-o",
        "longFormOption": "--output",
        "argument": "file",
        "description": "Write to file instead of stdout"
    },
    {
        "longFormOption": "--pass",
        "argument": "phrase",
        "description": "Pass phrase for the private key"
    },
    {
        "longFormOption": "--path-as-is",
        "description": "Do not squash .. sequences in URL path"
    },
    {
        "longFormOption": "--pinnedpubkey",
        "argument": "hashes",
        "description": "FILE/HASHES Public key to verify peer against"
    },
    {
        "longFormOption": "--post301",
        "description": "Do not switch to GET after following a 301"
    },
    {
        "longFormOption": "--post302",
        "description": "Do not switch to GET after following a 302"
    },
    {
        "longFormOption": "--post303",
        "description": "Do not switch to GET after following a 303"
    },
    {
        "longFormOption": "--preproxy",
        "description": "Use this proxy first"
    },
    {
        "shortFormOption": "-#",
        "longFormOption": "--progress-bar",
        "description": "Display transfer progress as a bar"
    },
    {
        "longFormOption": "--proto",
        "argument": "protocols",
        "description": "Enable/disable PROTOCOLS"
    },
    {
        "longFormOption": "--proto-default",
        "argument": "protocol",
        "description": "Use PROTOCOL for any URL missing a scheme"
    },
    {
        "longFormOption": "--proto-redir",
        "argument": "protocols",
        "description": "Enable/disable PROTOCOLS on redirect"
    },
    {
        "shortFormOption": "-x",
        "longFormOption": "--proxy",
        "description": "Use this proxy"
    },
    {
        "longFormOption": "--proxy-anyauth",
        "description": "any proxy authentication method"
    },
    {
        "longFormOption": "--proxy-basic",
        "description": "Use Basic authentication on the proxy"
    },
    {
        "longFormOption": "--proxy-cacert",
        "argument": "file",
        "description": "CA certificate to verify peer against for proxy"
    },
    {
        "longFormOption": "--proxy-capath",
        "argument": "dir",
        "description": "CA directory to verify peer against for proxy"
    },
    {
        "longFormOption": "--proxy-cert",
        "argument": "cert[:passwd]",
        "description": "Set client certificate for proxy"
    },
    {
        "longFormOption": "--proxy-cert-type",
        "argument": "type",
        "description": "Client certificate type for HTTS proxy"
    },
    {
        "longFormOption": "--proxy-ciphers",
        "argument": "list",
        "description": "SSL ciphers to use for proxy"
    },
    {
        "longFormOption": "--proxy-crlfile",
        "argument": "file",
        "description": "Set a CRL list for proxy"
    },
    {
        "longFormOption": "--proxy-digest",
        "description": "Use Digest authentication on the proxy"
    },
    {
        "longFormOption": "--proxy-header",
        "argument": "header/@file",
        "description": "Pass custom header(s) to proxy"
    },
    {
        "longFormOption": "--proxy-insecure",
        "description": "HTTPS proxy connections without verifying the proxy"
    },
    {
        "longFormOption": "--proxy-key",
        "argument": "key",
        "description": "Private key for HTTPS proxy"
    },
    {
        "longFormOption": "--proxy-key-type",
        "argument": "type",
        "description": "Private key file type for proxy"
    },
    {
        "longFormOption": "--proxy-negotiate",
        "description": "HTTP Negotiate (SPNEGO) authentication on the proxy"
    },
    {
        "longFormOption": "--proxy-ntlm",
        "description": "Use NTLM authentication on the proxy"
    },
    {
        "longFormOption": "--proxy-pass",
        "argument": "phrase",
        "description": "Pass phrase for the private key for HTTPS proxy"
    },
    {
        "longFormOption": "--proxy-pinnedpubkey",
        "argument": "hashes",
        "description": "FILE/HASHES public key to verify proxy with"
    },
    {
        "longFormOption": "--proxy-service-name",
        "argument": "name",
        "description": "SPNEGO proxy service name"
    },
    {
        "longFormOption": "--proxy-ssl-allow-beast",
        "description": "security flaw for interop for HTTPS proxy"
    },
    {
        "longFormOption": "--proxy-tlsauthtype",
        "argument": "type",
        "description": "TLS authentication type for HTTPS proxy"
    },
    {
        "longFormOption": "--proxy-tlspassword",
        "argument": "string",
        "description": "TLS password for HTTPS proxy"
    },
    {
        "longFormOption": "--proxy-tlsuser",
        "argument": "name",
        "description": "TLS username for HTTPS proxy"
    },
    {
        "longFormOption": "--proxy-tlsv1",
        "description": "Use TLSv1 for HTTPS proxy"
    },
    {
        "shortFormOption": "-U",
        "longFormOption": "--proxy-user",
        "argument": "user:password",
        "description": "Proxy user and password"
    },
    {
        "longFormOption": "--proxy1.0",
        "argument": "host[:port]",
        "description": "Use HTTP/1.0 proxy on given port"
    },
    {
        "shortFormOption": "-p",
        "longFormOption": "--proxytunnel",
        "description": "Operate through a HTTP proxy tunnel (using CONNECT)"
    },
    {
        "longFormOption": "--pubkey",
        "argument": "key",
        "description": "SSH Public key file name"
    },
    {
        "shortFormOption": "-Q",
        "longFormOption": "--quote",
        "description": "Send command(s) to server before transfer"
    },
    {
        "longFormOption": "--random-file",
        "argument": "file",
        "description": "File for reading random data from"
    },
    {
        "shortFormOption": "-r",
        "longFormOption": "--range",
        "argument": "range",
        "description": "Retrieve only the bytes within RANGE"
    },
    {
        "longFormOption": "--raw",
        "description": "Do HTTP \"raw\"; no transfer decoding"
    },
    {
        "shortFormOption": "-e",
        "longFormOption": "--referer",
        "argument": "URL",
        "description": "Referrer URL"
    },
    {
        "shortFormOption": "-J",
        "longFormOption": "--remote-header-name",
        "description": "the header-provided filename"
    },
    {
        "shortFormOption": "-O",
        "longFormOption": "--remote-name",
        "description": "Write output to a file named as the remote file"
    },
    {
        "longFormOption": "--remote-name-all",
        "description": "the remote file name for all URLs"
    },
    {
        "shortFormOption": "-R",
        "longFormOption": "--remote-time",
        "description": "Set the remote file's time on the local output"
    },
    {
        "longFormOption": "--request-target",
        "description": "the target for this request"
    },
    {
        "longFormOption": "--resolve",
        "argument": "host:port:address",
        "description": "Resolve the host+port to this address"
    },
    {
        "longFormOption": "--retry",
        "argument": "num",
        "description": "Retry request if transient problems occur"
    },
    {
        "longFormOption": "--retry-connrefused",
        "description": "on connection refused (use with --retry)"
    },
    {
        "longFormOption": "--retry-delay",
        "argument": "seconds",
        "description": "Wait time between retries"
    },
    {
        "longFormOption": "--retry-max-time",
        "argument": "seconds",
        "description": "Retry only within this period"
    },
    {
        "longFormOption": "--sasl-ir",
        "description": "Enable initial response in SASL authentication"
    },
    {
        "longFormOption": "--service-name",
        "argument": "name",
        "description": "SPNEGO service name"
    },
    {
        "shortFormOption": "-S",
        "longFormOption": "--show-error",
        "description": "Show error even when -s is used"
    },
    {
        "shortFormOption": "-s",
        "longFormOption": "--silent",
        "description": "Silent mode"
    },
    {
        "longFormOption": "--socks4",
        "argument": "host[:port]",
        "description": "SOCKS4 proxy on given host + port"
    },
    {
        "longFormOption": "--socks4a",
        "argument": "host[:port]",
        "description": "SOCKS4a proxy on given host + port"
    },
    {
        "longFormOption": "--socks5",
        "argument": "host[:port]",
        "description": "SOCKS5 proxy on given host + port"
    },
    {
        "longFormOption": "--socks5-basic",
        "description": "Enable username/password auth for SOCKS5 proxies"
    },
    {
        "longFormOption": "--socks5-gssapi",
        "description": "GSS-API auth for SOCKS5 proxies"
    },
    {
        "longFormOption": "--socks5-gssapi-nec",
        "description": "with NEC SOCKS5 server"
    },
    {
        "longFormOption": "--socks5-gssapi-service",
        "argument": "name",
        "description": "SOCKS5 proxy service name for GSS-API"
    },
    {
        "longFormOption": "--socks5-hostname",
        "argument": "host[:port]",
        "description": "SOCKS5 proxy, pass host name to proxy"
    },
    {
        "shortFormOption": "-Y",
        "longFormOption": "--speed-limit",
        "argument": "speed",
        "description": "Stop transfers slower than this"
    },
    {
        "shortFormOption": "-y",
        "longFormOption": "--speed-time",
        "argument": "seconds",
        "description": "Trigger 'speed-limit' abort after this time"
    },
    {
        "longFormOption": "--ssl",
        "description": "Try SSL/TLS"
    },
    {
        "longFormOption": "--ssl-allow-beast",
        "description": "security flaw to improve interop"
    },
    {
        "longFormOption": "--ssl-no-revoke",
        "description": "cert revocation checks (WinSSL)"
    },
    {
        "longFormOption": "--ssl-reqd",
        "description": "Require SSL/TLS"
    },
    {
        "shortFormOption": "-2",
        "longFormOption": "--sslv2",
        "description": "Use SSLv2"
    },
    {
        "shortFormOption": "-3",
        "longFormOption": "--sslv3",
        "description": "Use SSLv3"
    },
    {
        "longFormOption": "--stderr",
        "description": "Where to redirect stderr"
    },
    {
        "longFormOption": "--suppress-connect-headers",
        "description": "proxy CONNECT response headers"
    },
    {
        "longFormOption": "--tcp-fastopen",
        "description": "Use TCP Fast Open"
    },
    {
        "longFormOption": "--tcp-nodelay",
        "description": "Use the TCP_NODELAY option"
    },
    {
        "shortFormOption": "-t",
        "longFormOption": "--telnet-option",
        "argument": "opt=val",
        "description": "Set telnet option"
    },
    {
        "longFormOption": "--tftp-blksize",
        "argument": "value",
        "description": "Set TFTP BLKSIZE option"
    },
    {
        "longFormOption": "--tftp-no-options",
        "description": "not send any TFTP options"
    },
    {
        "shortFormOption": "-z",
        "longFormOption": "--time-cond",
        "argument": "time",
        "description": "Transfer based on a time condition"
    },
    {
        "longFormOption": "--tls-max",
        "argument": "VERSION",
        "description": "Use TLSv1.0 or greater"
    },
    {
        "longFormOption": "--tlsauthtype",
        "argument": "type",
        "description": "TLS authentication type"
    },
    {
        "longFormOption": "--tlspassword",
        "description": "TLS password"
    },
    {
        "longFormOption": "--tlsuser",
        "argument": "name",
        "description": "TLS user name"
    },
    {
        "shortFormOption": "-1",
        "longFormOption": "--tlsv1",
        "description": "Use TLSv1.0 or greater"
    },
    {
        "longFormOption": "--tlsv1.0",
        "description": "Use TLSv1.0"
    },
    {
        "longFormOption": "--tlsv1.1",
        "description": "Use TLSv1.1"
    },
    {
        "longFormOption": "--tlsv1.2",
        "description": "Use TLSv1.2"
    },
    {
        "longFormOption": "--tlsv1.3",
        "description": "Use TLSv1.3"
    },
    {
        "longFormOption": "--tr-encoding",
        "description": "Request compressed transfer encoding"
    },
    {
        "longFormOption": "--trace",
        "argument": "file",
        "description": "Write a debug trace to FILE"
    },
    {
        "longFormOption": "--trace-ascii",
        "argument": "file",
        "description": "Like --trace, but without hex output"
    },
    {
        "longFormOption": "--trace-time",
        "description": "Add time stamps to trace/verbose output"
    },
    {
        "longFormOption": "--unix-socket",
        "argument": "path",
        "description": "Connect through this Unix domain socket"
    },
    {
        "shortFormOption": "-T",
        "longFormOption": "--upload-file",
        "argument": "file",
        "description": "Transfer local FILE to destination"
    },
    {
        "shortFormOption": "-B",
        "longFormOption": "--use-ascii",
        "description": "Use ASCII/text transfer"
    },
    {
        "shortFormOption": "-u",
        "longFormOption": "--user",
        "argument": "user:password",
        "description": "Server user and password"
    },
    {
        "shortFormOption": "-A",
        "longFormOption": "--user-agent",
        "argument": "name",
        "description": "Send User-Agent <name> to server"
    },
    {
        "shortFormOption": "-v",
        "longFormOption": "--verbose",
        "description": "Make the operation more talkative"
    },
    {
        "shortFormOption": "-w",
        "longFormOption": "--write-out",
        "argument": "format",
        "description": "Use output FORMAT after completion"
    },
    {
        "longFormOption": "--xattr",
        "description": "Store metadata in extended file attributes"
    }
]